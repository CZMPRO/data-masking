<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mypro.mapper.SensitiveDataMapper">
  <resultMap id="BaseResultMap" type="com.mypro.entity.SensitiveData">
    <id column="data_id" jdbcType="INTEGER" property="dataId" />
    <result column="id_number" jdbcType="VARCHAR" property="idNumber" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="bank_card" jdbcType="VARCHAR" property="bankCard" />
    <result column="upload_time" jdbcType="TIMESTAMP" property="uploadTime" />
    <result column="uploader_id" jdbcType="INTEGER" property="uploaderId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    data_id, id_number, name, gender, phone_number, email, bank_card, upload_time, uploader_id
  </sql>
  <select id="selectByExample" parameterType="com.mypro.entity.SensitiveDataExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SensitiveData
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from SensitiveData
    where data_id = #{dataId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from SensitiveData
    where data_id = #{dataId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mypro.entity.SensitiveDataExample">
    delete from SensitiveData
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mypro.entity.SensitiveData">
    <selectKey keyProperty="dataId" order="AFTER" resultType="java.lang.Integer">
      select if(max(data_id) is null, 1, max(data_id) + 1) as newId from SensitiveData
    </selectKey>
    insert into SensitiveData (data_id, id_number, name, 
      gender, phone_number, email, 
      bank_card, upload_time, uploader_id
      )
    values (#{dataId,jdbcType=INTEGER}, #{idNumber,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{gender,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{bankCard,jdbcType=VARCHAR}, #{uploadTime,jdbcType=TIMESTAMP}, #{uploaderId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mypro.entity.SensitiveData">
    <selectKey keyProperty="dataId" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into SensitiveData
    <trim prefix="(" suffix=")" suffixOverrides=",">
      data_id,
      <if test="idNumber != null">
        id_number,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="bankCard != null">
        bank_card,
      </if>
      <if test="uploadTime != null">
        upload_time,
      </if>
      <if test="uploaderId != null">
        uploader_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{dataId,jdbcType=INTEGER},
      <if test="idNumber != null">
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="bankCard != null">
        #{bankCard,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null">
        #{uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uploaderId != null">
        #{uploaderId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mypro.entity.SensitiveDataExample" resultType="java.lang.Long">
    select count(*) from SensitiveData
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update SensitiveData
    <set>
      <if test="row.dataId != null">
        data_id = #{row.dataId,jdbcType=INTEGER},
      </if>
      <if test="row.idNumber != null">
        id_number = #{row.idNumber,jdbcType=VARCHAR},
      </if>
      <if test="row.name != null">
        name = #{row.name,jdbcType=VARCHAR},
      </if>
      <if test="row.gender != null">
        gender = #{row.gender,jdbcType=VARCHAR},
      </if>
      <if test="row.phoneNumber != null">
        phone_number = #{row.phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="row.email != null">
        email = #{row.email,jdbcType=VARCHAR},
      </if>
      <if test="row.bankCard != null">
        bank_card = #{row.bankCard,jdbcType=VARCHAR},
      </if>
      <if test="row.uploadTime != null">
        upload_time = #{row.uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.uploaderId != null">
        uploader_id = #{row.uploaderId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update SensitiveData
    set data_id = #{row.dataId,jdbcType=INTEGER},
      id_number = #{row.idNumber,jdbcType=VARCHAR},
      name = #{row.name,jdbcType=VARCHAR},
      gender = #{row.gender,jdbcType=VARCHAR},
      phone_number = #{row.phoneNumber,jdbcType=VARCHAR},
      email = #{row.email,jdbcType=VARCHAR},
      bank_card = #{row.bankCard,jdbcType=VARCHAR},
      upload_time = #{row.uploadTime,jdbcType=TIMESTAMP},
      uploader_id = #{row.uploaderId,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mypro.entity.SensitiveData">
    update SensitiveData
    <set>
      <if test="idNumber != null">
        id_number = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="bankCard != null">
        bank_card = #{bankCard,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null">
        upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uploaderId != null">
        uploader_id = #{uploaderId,jdbcType=INTEGER},
      </if>
    </set>
    where data_id = #{dataId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mypro.entity.SensitiveData">
    update SensitiveData
    set id_number = #{idNumber,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      bank_card = #{bankCard,jdbcType=VARCHAR},
      upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      uploader_id = #{uploaderId,jdbcType=INTEGER}
    where data_id = #{dataId,jdbcType=INTEGER}
  </update>
</mapper>